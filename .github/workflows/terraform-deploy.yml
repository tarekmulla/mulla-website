name: Terraform deployment

on:
  push:
    branches: ['main']
    paths: ['infrastructure/**']

  workflow_dispatch: #this attribute will enable the manual run to the pipeline


permissions:
  contents: read

# Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash

env:
  TERRAFORM_VERSION: 1.5.0
  TERRAFORM_REGION: ${{ vars.REGION }}
  INFRA_PATH: './infrastructure'
  WEB_URL: ${{ vars.WEB_URL }}
  DOMAIN: ${{ vars.DOMAIN }}

jobs:
  terraform-deploy:
    name: terraform deployment
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ env.WEB_URL }}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TERRAFORM_REGION }}

      - name: Use Node.js 18.4.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.4.0

      - name: Generate env variable
        run: |
          ${{ secrets.DOTENV_FILE }} > ./webapp/.env

      - name: Install npm dependencies
        run: npm --prefix ./webapp install

      - name: build the react webapp
        run: npm --prefix ./webapp run build

      # Install the latest version of Terraform CLI and configure the Terraform
      # CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Init Terraform
        id: init
        run: |
          terraform init
        working-directory: ${{ env.INFRA_PATH }}

      - name: Terraform Apply
        run: |
          terraform workspace new prod
          terraform apply -auto-approve -input=false
        working-directory: ${{ env.INFRA_PATH }}
        env:
          TF_VAR_domain: ${{ env.DOMAIN }}
